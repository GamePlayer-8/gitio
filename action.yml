name: 'gitio'
description: 'An I/O for the Git server communication & builder.'

inputs:
  type:
    description: 'Runtime I/O type.'
    required: false
    default: 'checkout'
  cmd:
    description: 'Commands for the I/O type.'
    required: false
    default: ''

runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.type }}
    - ${{ inputs.cmd }}
  steps:
    - name: Setup Wizard
      run: |
          if [ "$GITHUB_ACTIONS" = "true" ]; then
              echo "LOCAL_DIR=$(pwd)" >> $GITHUB_ENV
              echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
              echo "GIT_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
              echo "GIT_PROJECT_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
              echo "GIT_USERNAME=${{ github.repository_owner }}" >> $GITHUB_ENV
              echo "GIT_REPO=${{ github.repository }}" >> $GITHUB_ENV
              echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
              echo 'TZ="Europe/Warsaw"' >> $GITHUB_ENV
          else
          fi

    - name: Setup Wizard - Domains
      run: |
          if [ "$GITHUB_ACTIONS" = "true" ]; then
              echo "GIT_DOMAIN=$(bash /gitio-scripts/get_gh_domain.sh)" >> $GITHUB_ENV
              echo "GIT_WEBPAGE=https://$(bash /gitio-scripts/get_gh_domain.sh)" >> $GITHUB_ENV
          else

          fi

    - name: Setup Wizard - Inputs
      run: |
          if [ "$GITHUB_ACTIONS" = "true" ]; then
              echo "CMD_TYPE=${{ inputs.type }}" >> $GITHUB_ENV
              echo "CMD=${{ inputs.cmd }}" >> $GITHUB_ENV
          else

          fi

    - name: Start runtime
      run: |
          bash /gitio-runtime.sh "${CMD_TYPE}" "${CMD}"

