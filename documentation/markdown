#!/bin/sh
# Maintainer: Chimmie Firefly


# Check if the user provided a Markdown file as an argument
if [ $# -ne 1 ]; then
    echo "Usage: $0 input.md"
    exit 1
fi

input_file="$1"

# Check if the input file exists
if [ ! -f "$input_file" ]; then
    echo "Input file not found: $input_file"
    exit 1
fi

# Initialize the HTML content
#html_content="<html><head><title>Markdown to HTML</title></head><body>"
html_content=""

# Function to convert Markdown special characters to HTML
convert_special_characters() {
    local line="$1"
    # Convert Markdown inline code to HTML
    line="$(echo "$line" | sed -E 's/`([^`]+)`/<code>\1<\/code>/g')"
    # Convert Markdown bold text to HTML
    line="$(echo "$line" | sed -E 's/\*\*([^*]+)\*\*/<strong>\1<\/strong>/g')"
    # Convert Markdown italic text to HTML
    line="$(echo "$line" | sed -E 's/\*([^*]+)\*/<em>\1<\/em>/g')"
    # Convert Markdown anchors to HTML anchors
    line="$(echo "$line" | sed -E 's/\[([^]]+)\]\(([^)]+)\)/<a href="\2">\1<\/a>/g')"
    # Convert Markdown images to HTML images
    line="$(echo "$line" | sed -E 's/!\[([^\]]+)\]\(([^)]+)\)/<img src="\2" alt="\1">/g')"
    # Convert Markdown strikethrough text to HTML
    line=$(echo "$line" | sed -E 's/~([^~]+)~/<s>\1<\/s>/g')

    echo "$line"
}

# Detect and convert code blocks to HTML code blocks
in_code_block=false
code_block=""
while IFS= read -r line; do
    if [ "$in_code_block" = true ]; then
        if [ "$line" = '```' ]; then
            in_code_block=false
            code_block="${code_block}</code></pre>"
            html_content="${html_content}${code_block}"
            code_block=""
        else
            code_block="${code_block}${line}
"
        fi
    else
        # Detect code block start and extract the language specifier
        if echo "$line" | grep -q '^```[a-zA-Z]\{1,\}'; then
            lang=$(echo "$line" | sed -n 's/^``` \?\([a-zA-Z]\{1,\}\).*$/\1/p')
            in_code_block=true
            code_block="<pre><code lang=\"$lang\">"
        else
            # Detect Markdown headers and convert to HTML headers
            if echo "$line" | grep -qE '^#{1,6}[[:space:]]'; then
                level=$(echo "$line" | grep -oE '^#{1,6}' | wc -c)
                header_text=$(echo "$line" | sed -E 's/^#{1,6}[[:space:]](.+)/\1/')
                html_content="${html_content}<h$level>$(convert_special_characters "$header_text")</h$level>"
            else
                # Detect and convert Markdown lists to HTML lists
                if echo "$line" | grep -qE '^[[:space:]]*- '; then
                    item_text=$(echo "$line" | sed -E 's/^[[:space:]]*- (.+)/\1/')
                    if [ -z "$in_unordered_list" ]; then
                        in_unordered_list=true
                        html_content="${html_content}<ul>"
                    fi
                    html_content="${html_content}<li>$(convert_special_characters "$item_text")</li>"
                elif echo "$line" | grep -qE '^[[:space:]]*[0-9]+\.[[:space:]]'; then
                    item_text=$(echo "$line" | sed -E 's/^[[:space:]]*[0-9]+\.[[:space:]](.+)/\1/')
                    if [ -z "$in_ordered_list" ]; then
                        in_ordered_list=true
                        html_content="${html_content}<ol>"
                    fi
                    html_content="${html_content}<li>$(convert_special_characters "$item_text")</li>"
                else
                    # If no list item detected, close any open list tags
                    if [ "$in_unordered_list" ]; then
                        in_unordered_list=""
                        html_content="${html_content}</ul>"
                    fi
                    if [ "$in_ordered_list" ]; then
                        in_ordered_list=""
                        html_content="${html_content}</ol>"
                    fi

                    # Convert other Markdown elements to HTML with special character conversion
                    line="$(convert_special_characters "$line")"

                    # Append the line to HTML content
                    html_content="${html_content}<p>$line</p>"
                fi
            fi
        fi
    fi
done < "$input_file"

# Close any open list tags
if [ "$in_unordered_list" ]; then
    in_unordered_list=""
    html_content="${html_content}</ul>"
fi
if [ "$in_ordered_list" ]; then
    in_ordered_list=""
    html_content="${html_content}</ol>"
fi

# Close the HTML content
#html_content="${html_content}</body></html>"

# Write the HTML content to the output file
echo "$html_content"
